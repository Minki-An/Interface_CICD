name: Build Applications

on:
  push:
    branches:
      - main  # 빌드하고자 하는 브랜치로 변경

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [frontend, order, store, user]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: fetch origin
        id : fetch
        run : git fetch origin ${{ github.ref }}

      - name: Determine changed services
        id: changes
        run: |
          git diff --name-only ${{ github.event.before }} origin/main > changed_files.txt
          grep -Eo '(frontend|user|order|store)' changed_files.txt | sort | uniq > changed_apps.txt 
          if grep -q "${{ matrix.service }}" changed_apps.txt; then
            echo "${{ matrix.service }} changes"
          else
            echo "${{ matrix.service }} not changed"
          fi
          cat changed_apps.txt

      - name: Get image tag(verion)
        id: image
        run: |
          VERSION=$(echo ${{ github.sha }} | cut -c1-8)
          echo VERSION=$VERSION
          echo "::set-output name=version::$VERSION"
          
      - name: Build and push Docker images
        id : image-info
        env:
          ECR_REPOSITORY: ${{ matrix.service }}-app   
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.image.outputs.version }}
        run: |
          echo "::set-output name=ecr_repository::$ECR_REPOSITORY"
          echo "::set-output name=image_tag::$IMAGE_TAG"
          SERVICE="${{ matrix.service }}"
          
          while read -r app; do
            if [ -d "$app" ] && grep -q "$SERVICE" "$app"; then
              cd $SERVICE
              docker build -t $ECR_REGISTRY/${SERVICE}-app:$IMAGE_TAG .
              docker push $ECR_REGISTRY/${SERVICE}-app:$IMAGE_TAG
            fi
          done < changed_apps.txt

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1
        
      - name: Checkout frontend repository
        uses: actions/checkout@v2
        with:
          repository: Minki-An/${{ matrix.service }}-manifest-repo
          ref: main
          token: ${{ secrets.ACTION_TOKEN }}
          path: ${{ matrix.service }}-manifest-repo

      - name: Update Kubernetes resources
        run: |
          echo ${{ steps.login-ecr.outputs.registry }}
          echo ${{ steps.image-info.outputs.ecr_repository }}
          echo ${{ steps.image-info.outputs.image_tag }}
          if grep -q "${{ matrix.service }}" changed_apps.txt; then
            echo "Kustomize ${{ matrix.service }} "
            kustomize edit set image ${{ steps.login-ecr.outputs.registry}}/${app1}-app=${{ steps.login-ecr.outputs.registry}}/${app1}-app:${{ steps.image-info.outputs.image_tag }}
          else
            echo "${{ matrix.service }} not changed"
          fi
          cat kustomization.yaml


      - name: Commit files
        run: |
          if grep -q "${{ matrix.service }}" changed_apps.txt; then
            cd ${app}-manifest-repo
            git config --global user.email "github-actions@github.com"
            git config --global user.name "github-actions"
            git commit -am "Update image tag"
            git push -u origin main
          fi
          done
